<!DOCTYPE html>
<html>
<!--
   This is <%= grunt.config('pkg').name %> v<%= grunt.config('pkg').version %>
   (C) 2013-2014 by Timo DÃ¶rr and contributors. This software is licensed
   under the terms of the GNU GPLv3 with additional terms applied.
   See https://github.com/Dynalon/mdwiki/blob/master/LICENSE.txt for more detail.
   See http://github.com/Dynalon/mdwiki for a copy of the source code.
-->
<head>
    <title>GitApp</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="fragment" content="!">
    <link rel="shortcut icon" type="image/x-icon" href="favicon.png" />
    <meta charset="UTF-8">


</head>
<body>
<h1>Editing </h1>
<h4>If you're using GitHub as your version control system of choice then GitHub Apps can be incredibly useful for many tasks including building CI/CD, managing repositories, querying statistical data and much more. In this article we will walk through the process of building such an app in Go including setting up the GitHub integration, authenticating with GitHub, listening to webhooks, querying GitHub API and more.</h4>
    <div id="md-all">
    </div>
</body>
</html>